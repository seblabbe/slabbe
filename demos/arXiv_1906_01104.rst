===========================================================
Induction of `Z^2`-actions and of partitions of the 2-torus
===========================================================

`arXiv:1906.01104`__, June 2019, 36 p.

__ https://arxiv.org/abs/1906.01104

Running ``sage -t`` on this file takes 15 seconds with sage-8.7 and
slabbe-0.5.1.

Appendix: Sage code
-------------------

Polyhedron exchange transformations and induction of polyhedron partitions are
implemented in Sage with the optional package slabbe::

    sage: from slabbe import PolyhedronPartition
    sage: from slabbe import PolyhedronExchangeTransformation as PET
    sage: from slabbe import Substitution2d

The following allows to define the partition $P_0$ of $\R^2/\Gamma_0$, compute
the induced partition $P_1$ of $\R^2/\Gamma_1$, the substitution $\beta_0$ and
to reproduce the proof of Proposition 18.

.. link

::

    sage: z = polygen(QQ, 'z')
    sage: K = NumberField(z**2-z-1, 'phi', embedding=RR(1.6))
    sage: phi = K.gen()
    sage: from slabbe.polyhedron_partition import jeandel_rao_tilings_partition
    sage: P0 = jeandel_rao_tilings_partition()
    sage: Gamma0 = matrix.column([(phi,0), (1,phi+3)])
    sage: fundamental_domain = polytopes.parallelotope([(phi,0), (0,phi+3)])
    sage: R0e2 = PET.toral_translation(Gamma0, vector((0,1)), fundamental_domain)
    sage: y_le_1 = [1, 0, -1]   # syntax for the inequality y <= 1
    sage: P1,beta0 = R0e2.induced_partition(y_le_1, P0, substitution_type='column')
    sage: P1
    Polyhedron partition of 30 atoms with 28 letters
    sage: beta0
    Substitution 2d: {0: [[0, 9, 3, 7]], 1: [[0, 9, 7, 5]], 2: [[0, 9, 10, 4]], 3: [[1, 3, 3, 7]], 4: [[1, 3, 7, 6]], 5: [[1, 3, 8, 7]], 6: [[1, 7, 2, 5]], 7: [[1, 7, 5, 5]], 8: [[1, 7, 5, 6]], 9: [[1, 8, 7, 5]], 10: [[1, 8, 10, 4]], 11: [[1, 10, 4, 5]], 12: [[1, 10, 4, 6]], 13: [[0, 9, 3, 3, 7]], 14: [[0, 9, 3, 7, 6]], 15: [[0, 9, 3, 8, 7]], 16: [[0, 9, 7, 2, 5]], 17: [[0, 9, 7, 2, 6]], 18: [[0, 9, 7, 5, 5]], 19: [[0, 9, 7, 5, 6]], 20: [[0, 9, 8, 7, 5]], 21: [[0, 9, 8, 10, 4]], 22: [[0, 9, 10, 4, 6]], 23: [[1, 3, 3, 7, 6]], 24: [[1, 3, 8, 7, 6]], 25: [[1, 7, 2, 5, 6]], 26: [[1, 8, 10, 4, 6]], 27: [[1, 10, 4, 5, 6]]}

The following allows to reproduce the proof of Proposition 22, that is, to
construct the partitions $P_2$, $P_3$, $P_4$, $P_5$, $P_6$, $P_7$, $P_8$,
$P_9$, $P_{10}$ and show that $P_8$ and $P_{10}$ are equivalent:

.. link

::

    sage: x_le_1 = [1, -1, 0]   # x <= 1
    sage: Gamma2 = Gamma1 = matrix.column([(phi,0), (0,1)])
    sage: P2 = P1
    sage: R2e1 = PET.toral_translation(Gamma2, vector((1,0)))
    sage: P3,beta2 = R2e1.induced_partition(x_le_1, P2, substitution_type='row')
    sage: Gamma3 = matrix.column([(1,0), (0,1)])
    sage: Gamma4 = matrix.column([(phi^-1,0), (0,1)])
    sage: R9e1 = R7e1 = R5e1 = R3e1 = PET.toral_translation(Gamma3, vector((phi^-2,0)))
    sage: R8e2 = R6e2 = R4e2 = PET.toral_translation(Gamma4, vector((0,phi^-2)))
    sage: x_le_phi_inv = [phi^-1, -1, 0] # x <= phi^-1
    sage: y_le_phi_inv = [phi^-1, 0, -1] # y <= phi^-1
    sage: P4,beta3 = R3e1.induced_partition(x_le_phi_inv, P3, substitution_type='row')
    sage: P5,beta4 = R4e2.induced_partition(y_le_phi_inv, P4, substitution_type='column')
    sage: P5_scaled = (-phi*P5).translation((1,1))
    sage: P6,beta5 = R5e1.induced_partition(x_le_phi_inv, P5_scaled, substitution_type='row')
    sage: P7,beta6 = R6e2.induced_partition(y_le_phi_inv, P6, substitution_type='column')
    sage: P7_scaled = (-phi*P7).translation((1,1))
    sage: P8,beta7 = R7e1.induced_partition(x_le_phi_inv, P7_scaled, substitution_type='row')
    sage: P9,beta8 = R8e2.induced_partition(y_le_phi_inv, P8, substitution_type='column')
    sage: P9_scaled = (-phi*P9).translation((1,1))
    sage: P10,beta9 = R9e1.induced_partition(x_le_phi_inv, P9_scaled, substitution_type='row')
    sage: P8 == P10
    True
    sage: eta = Substitution2d.from_permutation(P8.keys_permutation(P10))
    sage: eta
    Substitution 2d: {0: [[1]], 1: [[0]], 2: [[4]], 3: [[3]], 4: [[5]], 5: [[2]], 6: [[10]], 7: [[9]], 8: [[11]], 9: [[8]], 10: [[7]], 11: [[6]], 12: [[15]], 13: [[18]], 14: [[17]], 15: [[16]], 16: [[13]], 17: [[14]], 18: [[12]]}
    sage: beta8*beta9*eta    # the self-similarity for P8
    Substitution 2d: {0: [[17]], 1: [[12]], 2: [[16, 10]], 3: [[16, 9]], 4: [[17, 7]], 5: [[12, 7]], 6: [[16], [2]], 7: [[14], [4]], 8: [[17], [2]], 9: [[13], [3]], 10: [[13], [2]], 11: [[12], [2]], 12: [[15, 11], [5, 1]], 13: [[18, 10], [4, 1]], 14: [[16, 10], [3, 1]], 15: [[16, 9], [2, 0]], 16: [[14, 6], [4, 1]], 17: [[14, 8], [4, 1]], 18: [[13, 6], [3, 1]]}

We may check that the self-similarity for $\Pcal_8$ satisfies 
$\rho^{-1}\beta_8\beta_9\eta\rho=\beta_\U$.

.. link

::

    sage: rho = Substitution2d.from_permutation({0:0, 1:1, 2:9, 3:7, 4:8, 5:11, 6:10, 
    ....: 7:6, 8:2, 9:4, 10:5, 11:3, 12:18, 13:14, 14:16, 15:13, 16:12, 17:17, 18:15})
    sage: rho.inverse()*beta8*beta9*eta*rho  # == betaU
    Substitution 2d: {0: [[17]], 1: [[16]], 2: [[15], [11]], 3: [[13], [9]], 4: [[17], [8]], 5: [[16], [8]], 6: [[15], [8]], 7: [[14], [8]], 8: [[14, 6]], 9: [[17, 3]], 10: [[16, 3]], 11: [[14, 2]], 12: [[15, 7], [11, 1]], 13: [[14, 6], [11, 1]], 14: [[13, 7], [9, 1]], 15: [[12, 6], [9, 1]], 16: [[18, 5], [10, 1]], 17: [[13, 4], [9, 1]], 18: [[14, 2], [8, 0]]}

To visualize the partitions and substitutions computed above, do as follows.

.. link

::

    sage: P1.plot()              # not tested
    sage: view(beta0)  # etc.    # not tested

